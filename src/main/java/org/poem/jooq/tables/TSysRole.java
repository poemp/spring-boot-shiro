/*
 * This file is generated by jOOQ.
 */
package org.poem.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.poem.jooq.Indexes;
import org.poem.jooq.Keys;
import org.poem.jooq.Public;
import org.poem.jooq.tables.records.TSysRoleRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSysRole extends TableImpl<TSysRoleRecord> {

    private static final long serialVersionUID = 2023211920;

    /**
     * The reference instance of <code>public.t_sys_role</code>
     */
    public static final TSysRole T_SYS_ROLE = new TSysRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TSysRoleRecord> getRecordType() {
        return TSysRoleRecord.class;
    }

    /**
     * The column <code>public.t_sys_role.id</code>.
     */
    public final TableField<TSysRoleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.t_sys_role.available</code>.
     */
    public final TableField<TSysRoleRecord, Short> AVAILABLE = createField("available", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.t_sys_role.description</code>.
     */
    public final TableField<TSysRoleRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>public.t_sys_role.role</code>.
     */
    public final TableField<TSysRoleRecord, String> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * Create a <code>public.t_sys_role</code> table reference
     */
    public TSysRole() {
        this(DSL.name("t_sys_role"), null);
    }

    /**
     * Create an aliased <code>public.t_sys_role</code> table reference
     */
    public TSysRole(String alias) {
        this(DSL.name(alias), T_SYS_ROLE);
    }

    /**
     * Create an aliased <code>public.t_sys_role</code> table reference
     */
    public TSysRole(Name alias) {
        this(alias, T_SYS_ROLE);
    }

    private TSysRole(Name alias, Table<TSysRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSysRole(Name alias, Table<TSysRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TSysRole(Table<O> child, ForeignKey<O, TSysRoleRecord> key) {
        super(child, key, T_SYS_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_SYS_ROLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TSysRoleRecord> getPrimaryKey() {
        return Keys.T_SYS_ROLE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TSysRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<TSysRoleRecord>>asList(Keys.T_SYS_ROLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSysRole as(String alias) {
        return new TSysRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSysRole as(Name alias) {
        return new TSysRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSysRole rename(String name) {
        return new TSysRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TSysRole rename(Name name) {
        return new TSysRole(name, null);
    }
}
