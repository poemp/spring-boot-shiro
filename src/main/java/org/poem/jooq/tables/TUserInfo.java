/*
 * This file is generated by jOOQ.
 */
package org.poem.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.poem.jooq.Indexes;
import org.poem.jooq.Keys;
import org.poem.jooq.Public;
import org.poem.jooq.tables.records.TUserInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUserInfo extends TableImpl<TUserInfoRecord> {

    private static final long serialVersionUID = 862292079;

    /**
     * The reference instance of <code>public.t_user_info</code>
     */
    public static final TUserInfo T_USER_INFO = new TUserInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserInfoRecord> getRecordType() {
        return TUserInfoRecord.class;
    }

    /**
     * The column <code>public.t_user_info.id</code>.
     */
    public final TableField<TUserInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.t_user_info.username</code>.
     */
    public final TableField<TUserInfoRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.t_user_info.name</code>.
     */
    public final TableField<TUserInfoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.t_user_info.password</code>.
     */
    public final TableField<TUserInfoRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.t_user_info.salt</code>.
     */
    public final TableField<TUserInfoRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.t_user_info.state</code>.
     */
    public final TableField<TUserInfoRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * Create a <code>public.t_user_info</code> table reference
     */
    public TUserInfo() {
        this(DSL.name("t_user_info"), null);
    }

    /**
     * Create an aliased <code>public.t_user_info</code> table reference
     */
    public TUserInfo(String alias) {
        this(DSL.name(alias), T_USER_INFO);
    }

    /**
     * Create an aliased <code>public.t_user_info</code> table reference
     */
    public TUserInfo(Name alias) {
        this(alias, T_USER_INFO);
    }

    private TUserInfo(Name alias, Table<TUserInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUserInfo(Name alias, Table<TUserInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TUserInfo(Table<O> child, ForeignKey<O, TUserInfoRecord> key) {
        super(child, key, T_USER_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_USER_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserInfoRecord> getPrimaryKey() {
        return Keys.T_USER_INFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserInfoRecord>>asList(Keys.T_USER_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUserInfo as(String alias) {
        return new TUserInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUserInfo as(Name alias) {
        return new TUserInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUserInfo rename(String name) {
        return new TUserInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TUserInfo rename(Name name) {
        return new TUserInfo(name, null);
    }
}
