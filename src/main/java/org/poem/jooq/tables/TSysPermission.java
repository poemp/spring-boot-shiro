/*
 * This file is generated by jOOQ.
 */
package org.poem.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.poem.jooq.Indexes;
import org.poem.jooq.Keys;
import org.poem.jooq.Public;
import org.poem.jooq.tables.records.TSysPermissionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSysPermission extends TableImpl<TSysPermissionRecord> {

    private static final long serialVersionUID = -1212536194;

    /**
     * The reference instance of <code>public.t_sys_permission</code>
     */
    public static final TSysPermission T_SYS_PERMISSION = new TSysPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TSysPermissionRecord> getRecordType() {
        return TSysPermissionRecord.class;
    }

    /**
     * The column <code>public.t_sys_permission.id</code>.
     */
    public final TableField<TSysPermissionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.t_sys_permission.available</code>.
     */
    public final TableField<TSysPermissionRecord, String> AVAILABLE = createField("available", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.t_sys_permission.name</code>.
     */
    public final TableField<TSysPermissionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.t_sys_permission.parent_id</code>.
     */
    public final TableField<TSysPermissionRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.t_sys_permission.parent_ids</code>.
     */
    public final TableField<TSysPermissionRecord, String> PARENT_IDS = createField("parent_ids", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.t_sys_permission.permission</code>.
     */
    public final TableField<TSysPermissionRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.t_sys_permission.resource_type</code>.
     */
    public final TableField<TSysPermissionRecord, String> RESOURCE_TYPE = createField("resource_type", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.t_sys_permission.url</code>.
     */
    public final TableField<TSysPermissionRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>public.t_sys_permission</code> table reference
     */
    public TSysPermission() {
        this(DSL.name("t_sys_permission"), null);
    }

    /**
     * Create an aliased <code>public.t_sys_permission</code> table reference
     */
    public TSysPermission(String alias) {
        this(DSL.name(alias), T_SYS_PERMISSION);
    }

    /**
     * Create an aliased <code>public.t_sys_permission</code> table reference
     */
    public TSysPermission(Name alias) {
        this(alias, T_SYS_PERMISSION);
    }

    private TSysPermission(Name alias, Table<TSysPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSysPermission(Name alias, Table<TSysPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TSysPermission(Table<O> child, ForeignKey<O, TSysPermissionRecord> key) {
        super(child, key, T_SYS_PERMISSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_SYS_PERMISSION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TSysPermissionRecord> getPrimaryKey() {
        return Keys.T_SYS_PERMISSION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TSysPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<TSysPermissionRecord>>asList(Keys.T_SYS_PERMISSION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSysPermission as(String alias) {
        return new TSysPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSysPermission as(Name alias) {
        return new TSysPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSysPermission rename(String name) {
        return new TSysPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TSysPermission rename(Name name) {
        return new TSysPermission(name, null);
    }
}
